{ stdenv
, lib
, fetchFromGitHub
, fetchurl
, fetchgit

, runCommand
, writeTextFile
, makeDesktopItem
, utillinux
, python2


, electron
, nodejs-10_x
# auxilary dep to scuttle-shell - needs to avail at runtime
, systrayhelper
}:

let
  nodejs = nodejs-10_x;

  # generated by node2nix with added propagated deps
  taleNodeEnv = (import ./node2nix-taleEnv.nix {
    inherit fetchurl fetchgit nodejs systrayhelper lib stdenv python2 utillinux runCommand writeTextFile;
  });

  taleNodePkg = taleNodeEnv.package.overrideAttrs (oldAttrs: rec {
    postInstall = "cd $out/lib/node_modules/talenet && ${nodejs}/bin/node .electron-vue/build.js";
  });

in stdenv.mkDerivation rec {
  name = "talenet-${version}";
  version = "v0.9.0-beta1.1";

  src = fetchFromGitHub {
    rev = version;
    owner = "talenet";
    repo = "talenet";
    sha256 = "0aqyvskisbj91drv27dmqyydwl5plm9rylym3jcwkggw58cdlkaz";
  };

  phases = [ "installPhase" ];

  buildIntputs = [ nodejs taleNodePkg electron];

  installPhase = ''
    echo pwd: $pwd
    echo out: $out
    echo taleNode: ${taleNodePkg}
    ls -lh ${taleNodePkg}
    ${electron}/bin/electron ${taleNodePkg}/dist
  '';
  # TODO mkwrapper electron?

  # fixupPhase = ''
  #   patchelf \
  #     --set-interpreter "$(cat $NIX_CC/nix-support/dynamic-linker)" \
  #     --set-rpath ${rpath}:$out/libexec \
  #     $out/node_modules/.bin/talenet
  # '';

  meta = {
    description = "The intergalactic skill & idea sharing community.";
    homepage    = https://t4l3.net;
    license     = lib.licenses.agpl3;
    maintainers = with lib.maintainers; [ cryptix ];
    platforms   = [ "x86_64-linux" ];
  };
}
